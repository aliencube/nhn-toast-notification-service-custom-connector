name: 'Function App Build and Test'

on:
  workflow_call:
    inputs:
      job_name:
        type: string
        required: true
      environment:
        type: string
        required: true
      api_app_name:
        type: string
        required: true

jobs:
  build_test_analyse:
    name: ${{ inputs.job_name }}

    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}

    steps:
    - name: Set environment variables
      shell: bash
      run: |
        echo "FUNCTION_APP_PATH=${{ github.workspace }}/src/${{ inputs.api_app_name }}" >> $GITHUB_ENV
        echo "RESOURCE_PATH=${{ github.workspace }}/resources" >> $GITHUB_ENV

    # - name: Check environment variables
    #   shell: bash
    #   run: |
    #     echo $FUNCTION_APP_PATH
    #     echo $RESOURCE_PATH

    - name: Checkout the repo
      uses: actions/checkout@v2

    - name: Setup .NET Core SDK
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '6.x'

    # - name: Initialise CodeQL
    #   uses: github/codeql-action/init@v1
    #   with:
    #     languages: 'csharp'

    - name: Restore NuGet packages
      shell: bash
      run: |
        dotnet restore .

    - name: Build solution
      shell: bash
      run: |
        dotnet build . -c Release

    - name: Test solution
      shell: bash
      run: |
        dotnet test . -c Release

    # - name: Perform CodeQL analysis
    #   uses: github/codeql-action/analyze@v1

    - name: Create FunctionApp artifact
      shell: bash
      run: |
        pushd "${{ env.FUNCTION_APP_PATH }}"
        dotnet publish . -c Release -o published
        popd

    - name: Upload FunctionApp artifact
      uses: actions/upload-artifact@v2
      with:
        name: ${{ inputs.api_app_name }}
        path: ${{ env.FUNCTION_APP_PATH }}/published

    - name: Upload bicep artifact
      uses: actions/upload-artifact@v2
      with:
        name: resources
        path: ${{ env.RESOURCE_PATH }}

    - name: Install Azure Functions Core Tools
      shell: pwsh
      run: |
        npm install -g azure-functions-core-tools@4 --unsafe-perm true

    - name: Generate OpenAPI document
      shell: pwsh
      env:
        OpenApi__HostNames: 'https://fncapp-nt-sms-verify-dev-krc.azurewebsites.net/api'
        OpenApi__Version: 'v3'
        OpenApi__DocVersion: 'v3.0'
        Toast__HostName: 'https://api-sms.cloud.toast.com/'
        Toast__BaseUrl: 'sms/'
        Toast__ApiVersion: 'v3.0'
        AZURE_FUNCTIONS_ENVIRONMENT: 'Production'
        FUNCTIONS_WORKER_RUNTIME: 'dotnet'
      run: |
        cd ${{ env.FUNCTION_APP_PATH }}

        mkdir outputs
        # cp ./local.settings.sample.json ./local.settings.json

        # dir env:

        # ls -al

        Start-Process -NoNewWindow func @("start","--language-worker","dotnet","--verbose","false")
        Start-Sleep -s 60

        # curl http://localhost:7071/api/openapi/v3.json
        Invoke-RestMethod -Method Get -Uri http://localhost:7071/api/openapi/v3.json | ConvertTo-Json -Depth 100 | Out-File -FilePath ./outputs/openapi.json -Force

        Get-Content -Path ./outputs/openapi.json

        cd ${{ github.workspace }}

    - name: Upload OpenAPI document
      uses: actions/upload-artifact@v2
      with:
        name: openapi
        path: ${{ env.FUNCTION_APP_PATH }}/outputs
